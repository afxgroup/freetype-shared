#ifndef INLINE4_FREETYPE_H
#define INLINE4_FREETYPE_H

/*
** This file was machine generated by idltool.py 54.8.
** Do not edit.
**
** It provides compatibility to AmigaOS 3.x style library
** calls by substituting functions.
*/

#include <exec/types.h>
#include <exec/exec.h>
#include <exec/interfaces.h>

#include <freetype/freetype.h>
#include <freetype/freetype.h>
#include <freetype/ftbdf.h>
#include <freetype/ftcache.h>
#include <freetype/ftcolor.h>
#include <freetype/ftgxval.h>
#include <freetype/ftlcdfil.h>
#include <freetype/ftlist.h>
#include <freetype/ftlogging.h>
#include <freetype/ftmm.h>
#include <freetype/ftmodapi.h>
#include <freetype/ftoutln.h>
#include <freetype/ftsnames.h>
#include <freetype/ftstroke.h>
#include <freetype/fttrigon.h>
#include <freetype/ftwinfnt.h>
#include <freetype/t1tables.h>
#include <freetype/tttables.h>

/* Inline macros for Interface "main" */
#define FT_Init_FreeType(alibrary) IFreetype->FT_Init_FreeType((alibrary))
#define FT_Done_FreeType(library) IFreetype->FT_Done_FreeType((library))
#define FT_New_Face(library, filepathname, face_index, aface) IFreetype->FT_New_Face((library), (filepathname), (face_index), (aface))
#define FT_New_Memory_Face(library, file_base, file_size, face_index, aface) IFreetype->FT_New_Memory_Face((library), (file_base), (file_size), (face_index), (aface))
#define FT_Open_Face(library, args, face_index, aface) IFreetype->FT_Open_Face((library), (args), (face_index), (aface))
#define FT_Attach_File(face, filepathname) IFreetype->FT_Attach_File((face), (filepathname))
#define FT_Attach_Stream(face, parameters) IFreetype->FT_Attach_Stream((face), (parameters))
#define FT_Reference_Face(face) IFreetype->FT_Reference_Face((face))
#define FT_Done_Face(face) IFreetype->FT_Done_Face((face))
#define FT_Select_Size(face, strike_index) IFreetype->FT_Select_Size((face), (strike_index))
#define FT_Request_Size(face, req) IFreetype->FT_Request_Size((face), (req))
#define FT_Set_Char_Size(face, char_width, char_height, horz_resolution, vert_resolution) IFreetype->FT_Set_Char_Size((face), (char_width), (char_height), (horz_resolution), (vert_resolution))
#define FT_Set_Pixel_Sizes(face, pixel_width, pixel_height) IFreetype->FT_Set_Pixel_Sizes((face), (pixel_width), (pixel_height))
#define FT_Load_Glyph(face, glyph_index, load_flags) IFreetype->FT_Load_Glyph((face), (glyph_index), (load_flags))
#define FT_Load_Char(face, char_code, load_flags) IFreetype->FT_Load_Char((face), (char_code), (load_flags))
#define FT_Set_Transform(face, matrix, delta) IFreetype->FT_Set_Transform((face), (matrix), (delta))
#define FT_Get_Transform(face, matrix, delta) IFreetype->FT_Get_Transform((face), (matrix), (delta))
#define FT_Render_Glyph(slot, render_mode) IFreetype->FT_Render_Glyph((slot), (render_mode))
#define FT_Get_Kerning(face, left_glyph, right_glyph, kern_mode, akerning) IFreetype->FT_Get_Kerning((face), (left_glyph), (right_glyph), (kern_mode), (akerning))
#define FT_Get_Track_Kerning(face, point_size, degree, akerning) IFreetype->FT_Get_Track_Kerning((face), (point_size), (degree), (akerning))
#define FT_Select_Charmap(face, encoding) IFreetype->FT_Select_Charmap((face), (encoding))
#define FT_Set_Charmap(face, charmap) IFreetype->FT_Set_Charmap((face), (charmap))
#define FT_Get_Charmap_Index(charmap) IFreetype->FT_Get_Charmap_Index((charmap))
#define FT_Get_Char_Index(face, charcode) IFreetype->FT_Get_Char_Index((face), (charcode))
#define FT_Get_First_Char(face, agindex) IFreetype->FT_Get_First_Char((face), (agindex))
#define FT_Get_Next_Char(face, char_code, agindex) IFreetype->FT_Get_Next_Char((face), (char_code), (agindex))
#define FT_Face_Properties(face, num_properties, properties) IFreetype->FT_Face_Properties((face), (num_properties), (properties))
#define FT_Get_Name_Index(face, glyph_name) IFreetype->FT_Get_Name_Index((face), (glyph_name))
#define FT_Get_Glyph_Name(face, glyph_index, buffer, buffer_max) IFreetype->FT_Get_Glyph_Name((face), (glyph_index), (buffer), (buffer_max))
#define FT_Get_Postscript_Name(face) IFreetype->FT_Get_Postscript_Name((face))
#define FT_Get_SubGlyph_Info(glyph, sub_index, p_index, p_flags, p_arg1, p_arg2, p_transform) IFreetype->FT_Get_SubGlyph_Info((glyph), (sub_index), (p_index), (p_flags), (p_arg1), (p_arg2), (p_transform))
#define FT_Get_FSType_Flags(face) IFreetype->FT_Get_FSType_Flags((face))
#define FT_Face_GetCharVariantIndex(face, charcode, variantSelector) IFreetype->FT_Face_GetCharVariantIndex((face), (charcode), (variantSelector))
#define FT_Face_GetCharVariantIsDefault(face, charcode, variantSelector) IFreetype->FT_Face_GetCharVariantIsDefault((face), (charcode), (variantSelector))
#define FT_Face_GetVariantSelectors(face) IFreetype->FT_Face_GetVariantSelectors((face))
#define FT_Face_GetVariantsOfChar(face, charcode) IFreetype->FT_Face_GetVariantsOfChar((face), (charcode))
#define FT_Face_GetCharsOfVariant(face, variantSelector) IFreetype->FT_Face_GetCharsOfVariant((face), (variantSelector))
#define FT_MulDiv(a, b, c) IFreetype->FT_MulDiv((a), (b), (c))
#define FT_MulFix(a, b) IFreetype->FT_MulFix((a), (b))
#define FT_DivFix(a, b) IFreetype->FT_DivFix((a), (b))
#define FT_RoundFix(a) IFreetype->FT_RoundFix((a))
#define FT_CeilFix(a) IFreetype->FT_CeilFix((a))
#define FT_FloorFix(a) IFreetype->FT_FloorFix((a))
#define FT_Vector_Transform(vector, matrix) IFreetype->FT_Vector_Transform((vector), (matrix))
#define FT_Library_Version(library, amajor, aminor, apatch) IFreetype->FT_Library_Version((library), (amajor), (aminor), (apatch))
#define FT_Face_CheckTrueTypePatents(face) IFreetype->FT_Face_CheckTrueTypePatents((face))
#define FT_Face_SetUnpatentedHinting(face, value) IFreetype->FT_Face_SetUnpatentedHinting((face), (value))
#define FT_Get_Advance(face, gindex, load_flags, padvance) IFreetype->FT_Get_Advance((face), (gindex), (load_flags), (padvance))
#define FT_Get_Advances(face, start, count, load_flags, padvances) IFreetype->FT_Get_Advances((face), (start), (count), (load_flags), (padvances))
#define FT_Outline_Get_BBox(outline, abbox) IFreetype->FT_Outline_Get_BBox((outline), (abbox))
#define FT_Get_BDF_Charset_ID(face, acharset_encoding, acharset_registry) IFreetype->FT_Get_BDF_Charset_ID((face), (acharset_encoding), (acharset_registry))
#define FT_Get_BDF_Property(face, prop_name, aproperty) IFreetype->FT_Get_BDF_Property((face), (prop_name), (aproperty))
#define FT_Bitmap_Init(abitmap) IFreetype->FT_Bitmap_Init((abitmap))
#define FT_Bitmap_New(abitmap) IFreetype->FT_Bitmap_New((abitmap))
#define FT_Bitmap_Copy(library, source, target) IFreetype->FT_Bitmap_Copy((library), (source), (target))
#define FT_Bitmap_Embolden(library, bitmap, xStrength, yStrength) IFreetype->FT_Bitmap_Embolden((library), (bitmap), (xStrength), (yStrength))
#define FT_Bitmap_Convert(library, source, target, alignment) IFreetype->FT_Bitmap_Convert((library), (source), (target), (alignment))
#define FT_Bitmap_Blend(library, source, source_offset, target, atarget_offset, color) IFreetype->FT_Bitmap_Blend((library), (source), (source_offset), (target), (atarget_offset), (color))
#define FT_GlyphSlot_Own_Bitmap(slot) IFreetype->FT_GlyphSlot_Own_Bitmap((slot))
#define FT_Bitmap_Done(library, bitmap) IFreetype->FT_Bitmap_Done((library), (bitmap))
#define FT_Stream_OpenBzip2(stream, source) IFreetype->FT_Stream_OpenBzip2((stream), (source))
#define FTC_Manager_New(library, max_faces, max_sizes, max_bytes, requester, req_data, amanager) IFreetype->FTC_Manager_New((library), (max_faces), (max_sizes), (max_bytes), (requester), (req_data), (amanager))
#define FTC_Manager_Reset(manager) IFreetype->FTC_Manager_Reset((manager))
#define FTC_Manager_Done(manager) IFreetype->FTC_Manager_Done((manager))
#define FTC_Manager_LookupFace(manager, face_id, aface) IFreetype->FTC_Manager_LookupFace((manager), (face_id), (aface))
#define FTC_Manager_LookupSize(manager, scaler, asize) IFreetype->FTC_Manager_LookupSize((manager), (scaler), (asize))
#define FTC_Node_Unref(node, manager) IFreetype->FTC_Node_Unref((node), (manager))
#define FTC_Manager_RemoveFaceID(manager, face_id) IFreetype->FTC_Manager_RemoveFaceID((manager), (face_id))
#define FTC_CMapCache_New(manager, acache) IFreetype->FTC_CMapCache_New((manager), (acache))
#define FTC_CMapCache_Lookup(cache, face_id, cmap_index, char_code) IFreetype->FTC_CMapCache_Lookup((cache), (face_id), (cmap_index), (char_code))
#define FTC_ImageCache_New(manager, acache) IFreetype->FTC_ImageCache_New((manager), (acache))
#define FTC_ImageCache_Lookup(cache, type, gindex, aglyph, anode) IFreetype->FTC_ImageCache_Lookup((cache), (type), (gindex), (aglyph), (anode))
#define FTC_ImageCache_LookupScaler(cache, scaler, load_flags, gindex, aglyph, anode) IFreetype->FTC_ImageCache_LookupScaler((cache), (scaler), (load_flags), (gindex), (aglyph), (anode))
#define FTC_SBitCache_New(manager, acache) IFreetype->FTC_SBitCache_New((manager), (acache))
#define FTC_SBitCache_Lookup(cache, type, gindex, sbit, anode) IFreetype->FTC_SBitCache_Lookup((cache), (type), (gindex), (sbit), (anode))
#define FTC_SBitCache_LookupScaler(cache, scaler, load_flags, gindex, sbit, anode) IFreetype->FTC_SBitCache_LookupScaler((cache), (scaler), (load_flags), (gindex), (sbit), (anode))
#define FT_Get_CID_Registry_Ordering_Supplement(face, registry, ordering, supplement) IFreetype->FT_Get_CID_Registry_Ordering_Supplement((face), (registry), (ordering), (supplement))
#define FT_Get_CID_Is_Internally_CID_Keyed(face, is_cid) IFreetype->FT_Get_CID_Is_Internally_CID_Keyed((face), (is_cid))
#define FT_Get_CID_From_Glyph_Index(face, glyph_index, cid) IFreetype->FT_Get_CID_From_Glyph_Index((face), (glyph_index), (cid))
#define FT_Palette_Data_Get(face, apalette) IFreetype->FT_Palette_Data_Get((face), (apalette))
#define FT_Palette_Select(face, palette_index, apalette) IFreetype->FT_Palette_Select((face), (palette_index), (apalette))
#define FT_Palette_Set_Foreground_Color(face, foreground_color) IFreetype->FT_Palette_Set_Foreground_Color((face), (foreground_color))
#define FT_Get_Color_Glyph_Layer(face, base_glyph, aglyph_index, acolor_index, iterator) IFreetype->FT_Get_Color_Glyph_Layer((face), (base_glyph), (aglyph_index), (acolor_index), (iterator))
#define FT_Get_Color_Glyph_Paint(face, base_glyph, root_transform, paint) IFreetype->FT_Get_Color_Glyph_Paint((face), (base_glyph), (root_transform), (paint))
#define FT_Get_Color_Glyph_ClipBox(face, base_glyph, clip_box) IFreetype->FT_Get_Color_Glyph_ClipBox((face), (base_glyph), (clip_box))
#define FT_Get_Paint_Layers(face, iterator, paint) IFreetype->FT_Get_Paint_Layers((face), (iterator), (paint))
#define FT_Get_Colorline_Stops(face, color_stop, iterator) IFreetype->FT_Get_Colorline_Stops((face), (color_stop), (iterator))
#define FT_Get_Paint(face, opaque_paint, paint) IFreetype->FT_Get_Paint((face), (opaque_paint), (paint))
#define FT_Error_String(error_code) IFreetype->FT_Error_String((error_code))
#define FT_Get_Font_Format(face) IFreetype->FT_Get_Font_Format((face))
#define FT_Get_X11_Font_Format(face) IFreetype->FT_Get_X11_Font_Format((face))
#define FT_Get_Gasp(face, ppem) IFreetype->FT_Get_Gasp((face), (ppem))
#define FT_New_Glyph(library, format, aglyph) IFreetype->FT_New_Glyph((library), (format), (aglyph))
#define FT_Get_Glyph(slot, aglyph) IFreetype->FT_Get_Glyph((slot), (aglyph))
#define FT_Glyph_Copy(source, target) IFreetype->FT_Glyph_Copy((source), (target))
#define FT_Glyph_Transform(glyph, matrix, delta) IFreetype->FT_Glyph_Transform((glyph), (matrix), (delta))
#define FT_Glyph_Get_CBox(glyph, bbox_mode, acbox) IFreetype->FT_Glyph_Get_CBox((glyph), (bbox_mode), (acbox))
#define FT_Glyph_To_Bitmap(the_glyph, render_mode, origin, destroy) IFreetype->FT_Glyph_To_Bitmap((the_glyph), (render_mode), (origin), (destroy))
#define FT_Done_Glyph(glyph) IFreetype->FT_Done_Glyph((glyph))
#define FT_Matrix_Multiply(a, b) IFreetype->FT_Matrix_Multiply((a), (b))
#define FT_Matrix_Invert(matrix) IFreetype->FT_Matrix_Invert((matrix))
#define FT_TrueTypeGX_Validate(face, validation_flags, tables[FT_VALIDATE_GX_LENGTH], table_length) IFreetype->FT_TrueTypeGX_Validate((face), (validation_flags), (tables[FT_VALIDATE_GX_LENGTH]), (table_length))
#define FT_TrueTypeGX_Free(face, table) IFreetype->FT_TrueTypeGX_Free((face), (table))
#define FT_ClassicKern_Validate(face, validation_flags, ckern_table) IFreetype->FT_ClassicKern_Validate((face), (validation_flags), (ckern_table))
#define FT_ClassicKern_Free(face, table) IFreetype->FT_ClassicKern_Free((face), (table))
#define FT_Stream_OpenGzip(stream, source) IFreetype->FT_Stream_OpenGzip((stream), (source))
#define FT_Gzip_Uncompress(memory, output, output_len, input, input_len) IFreetype->FT_Gzip_Uncompress((memory), (output), (output_len), (input), (input_len))
#define FT_Library_SetLcdFilter(library, filter) IFreetype->FT_Library_SetLcdFilter((library), (filter))
#define FT_Library_SetLcdFilterWeights(library, weights) IFreetype->FT_Library_SetLcdFilterWeights((library), (weights))
#define FT_Library_SetLcdGeometry(library, sub[3]) IFreetype->FT_Library_SetLcdGeometry((library), (sub[3]))
#define FT_List_Find(list, data) IFreetype->FT_List_Find((list), (data))
#define FT_List_Add(list, node) IFreetype->FT_List_Add((list), (node))
#define FT_List_Insert(list, node) IFreetype->FT_List_Insert((list), (node))
#define FT_List_Remove(list, node) IFreetype->FT_List_Remove((list), (node))
#define FT_List_Up(list, node) IFreetype->FT_List_Up((list), (node))
#define FT_List_Iterate(list, iterator, user) IFreetype->FT_List_Iterate((list), (iterator), (user))
#define FT_List_Finalize(list, destroy, memory, user) IFreetype->FT_List_Finalize((list), (destroy), (memory), (user))
#define FT_Trace_Set_Level(tracing_level) IFreetype->FT_Trace_Set_Level((tracing_level))
#define FT_Trace_Set_Default_Level() IFreetype->FT_Trace_Set_Default_Level()
#define FT_Set_Log_Handler(handler) IFreetype->FT_Set_Log_Handler((handler))
#define FT_Set_Default_Log_Handler() IFreetype->FT_Set_Default_Log_Handler()
#define FT_Stream_OpenLZW(stream, source) IFreetype->FT_Stream_OpenLZW((stream), (source))
#define FT_Get_Multi_Master(face, amaster) IFreetype->FT_Get_Multi_Master((face), (amaster))
#define FT_Get_MM_Var(face, amaster) IFreetype->FT_Get_MM_Var((face), (amaster))
#define FT_Done_MM_Var(library, amaster) IFreetype->FT_Done_MM_Var((library), (amaster))
#define FT_Set_MM_Design_Coordinates(face, num_coords, coords) IFreetype->FT_Set_MM_Design_Coordinates((face), (num_coords), (coords))
#define FT_Set_Var_Design_Coordinates(face, num_coords, coords) IFreetype->FT_Set_Var_Design_Coordinates((face), (num_coords), (coords))
#define FT_Get_Var_Design_Coordinates(face, num_coords, coords) IFreetype->FT_Get_Var_Design_Coordinates((face), (num_coords), (coords))
#define FT_Set_MM_Blend_Coordinates(face, num_coords, coords) IFreetype->FT_Set_MM_Blend_Coordinates((face), (num_coords), (coords))
#define FT_Get_MM_Blend_Coordinates(face, num_coords, coords) IFreetype->FT_Get_MM_Blend_Coordinates((face), (num_coords), (coords))
#define FT_Set_Var_Blend_Coordinates(face, num_coords, coords) IFreetype->FT_Set_Var_Blend_Coordinates((face), (num_coords), (coords))
#define FT_Get_Var_Blend_Coordinates(face, num_coords, coords) IFreetype->FT_Get_Var_Blend_Coordinates((face), (num_coords), (coords))
#define FT_Set_MM_WeightVector(face, len, weightvector) IFreetype->FT_Set_MM_WeightVector((face), (len), (weightvector))
#define FT_Get_MM_WeightVector(face, len, weightvector) IFreetype->FT_Get_MM_WeightVector((face), (len), (weightvector))
#define FT_Get_Var_Axis_Flags(master, axis_index, flags) IFreetype->FT_Get_Var_Axis_Flags((master), (axis_index), (flags))
#define FT_Set_Named_Instance(face, instance_index) IFreetype->FT_Set_Named_Instance((face), (instance_index))
#define FT_Get_Default_Named_Instance(face, instance_index) IFreetype->FT_Get_Default_Named_Instance((face), (instance_index))
#define FT_Add_Module(library, clazz) IFreetype->FT_Add_Module((library), (clazz))
#define FT_Get_Module(library, module_name) IFreetype->FT_Get_Module((library), (module_name))
#define FT_Remove_Module(library, module) IFreetype->FT_Remove_Module((library), (module))
#define FT_Property_Set(library, module_name, property_name, value) IFreetype->FT_Property_Set((library), (module_name), (property_name), (value))
#define FT_Property_Get(library, module_name, property_name, value) IFreetype->FT_Property_Get((library), (module_name), (property_name), (value))
#define FT_Set_Default_Properties(library) IFreetype->FT_Set_Default_Properties((library))
#define FT_Reference_Library(library) IFreetype->FT_Reference_Library((library))
#define FT_New_Library(memory, alibrary) IFreetype->FT_New_Library((memory), (alibrary))
#define FT_Done_Library(library) IFreetype->FT_Done_Library((library))
#define FT_Set_Debug_Hook(library, hook_index, debug_hook) IFreetype->FT_Set_Debug_Hook((library), (hook_index), (debug_hook))
#define FT_Add_Default_Modules(library) IFreetype->FT_Add_Default_Modules((library))
#define FT_Get_TrueType_Engine_Type(library) IFreetype->FT_Get_TrueType_Engine_Type((library))
#define FT_OpenType_Validate(face, validation_flags, BASE_table, GDEF_table, GPOS_table, GSUB_table, JSTF_table) IFreetype->FT_OpenType_Validate((face), (validation_flags), (BASE_table), (GDEF_table), (GPOS_table), (GSUB_table), (JSTF_table))
#define FT_OpenType_Free(face, table) IFreetype->FT_OpenType_Free((face), (table))
#define FT_Outline_Decompose(outline, func_interface, user) IFreetype->FT_Outline_Decompose((outline), (func_interface), (user))
#define FT_Outline_New(library, numPoints, numContours, anoutline) IFreetype->FT_Outline_New((library), (numPoints), (numContours), (anoutline))
#define FT_Outline_Done(library, outline) IFreetype->FT_Outline_Done((library), (outline))
#define FT_Outline_Check(outline) IFreetype->FT_Outline_Check((outline))
#define FT_Outline_Get_CBox(outline, acbox) IFreetype->FT_Outline_Get_CBox((outline), (acbox))
#define FT_Outline_Translate(outline, xOffset, yOffset) IFreetype->FT_Outline_Translate((outline), (xOffset), (yOffset))
#define FT_Outline_Copy(source, target) IFreetype->FT_Outline_Copy((source), (target))
#define FT_Outline_Transform(outline, matrix) IFreetype->FT_Outline_Transform((outline), (matrix))
#define FT_Outline_Embolden(outline, strength) IFreetype->FT_Outline_Embolden((outline), (strength))
#define FT_Outline_EmboldenXY(outline, xstrength, ystrength) IFreetype->FT_Outline_EmboldenXY((outline), (xstrength), (ystrength))
#define FT_Outline_Reverse(outline) IFreetype->FT_Outline_Reverse((outline))
#define FT_Outline_Get_Bitmap(library, outline, abitmap) IFreetype->FT_Outline_Get_Bitmap((library), (outline), (abitmap))
#define FT_Outline_Render(library, outline, params) IFreetype->FT_Outline_Render((library), (outline), (params))
#define FT_Outline_Get_Orientation(outline) IFreetype->FT_Outline_Get_Orientation((outline))
#define FT_Get_PFR_Metrics(face, aoutline_resolution, ametrics_resolution, ametrics_x_scale, ametrics_y_scale) IFreetype->FT_Get_PFR_Metrics((face), (aoutline_resolution), (ametrics_resolution), (ametrics_x_scale), (ametrics_y_scale))
#define FT_Get_PFR_Kerning(face, left, right, avector) IFreetype->FT_Get_PFR_Kerning((face), (left), (right), (avector))
#define FT_Get_PFR_Advance(face, gindex, aadvance) IFreetype->FT_Get_PFR_Advance((face), (gindex), (aadvance))
#define FT_Get_Renderer(library, format) IFreetype->FT_Get_Renderer((library), (format))
#define FT_Set_Renderer(library, renderer, num_params, parameters) IFreetype->FT_Set_Renderer((library), (renderer), (num_params), (parameters))
#define FT_New_Size(face, size) IFreetype->FT_New_Size((face), (size))
#define FT_Done_Size(size) IFreetype->FT_Done_Size((size))
#define FT_Activate_Size(size) IFreetype->FT_Activate_Size((size))
#define FT_Get_Sfnt_Name_Count(face) IFreetype->FT_Get_Sfnt_Name_Count((face))
#define FT_Get_Sfnt_Name(face, idx, aname) IFreetype->FT_Get_Sfnt_Name((face), (idx), (aname))
#define FT_Get_Sfnt_LangTag(face, langID, alangTag) IFreetype->FT_Get_Sfnt_LangTag((face), (langID), (alangTag))
#define FT_Outline_GetInsideBorder(outline) IFreetype->FT_Outline_GetInsideBorder((outline))
#define FT_Outline_GetOutsideBorder(outline) IFreetype->FT_Outline_GetOutsideBorder((outline))
#define FT_Stroker_New(library, astroker) IFreetype->FT_Stroker_New((library), (astroker))
#define FT_Stroker_Set(stroker, radius, line_cap, line_join, miter_limit) IFreetype->FT_Stroker_Set((stroker), (radius), (line_cap), (line_join), (miter_limit))
#define FT_Stroker_Rewind(stroker) IFreetype->FT_Stroker_Rewind((stroker))
#define FT_Stroker_ParseOutline(stroker, outline, opened) IFreetype->FT_Stroker_ParseOutline((stroker), (outline), (opened))
#define FT_Stroker_BeginSubPath(stroker, to, open) IFreetype->FT_Stroker_BeginSubPath((stroker), (to), (open))
#define FT_Stroker_EndSubPath(stroker) IFreetype->FT_Stroker_EndSubPath((stroker))
#define FT_Stroker_LineTo(stroker, to) IFreetype->FT_Stroker_LineTo((stroker), (to))
#define FT_Stroker_ConicTo(stroker, control, to) IFreetype->FT_Stroker_ConicTo((stroker), (control), (to))
#define FT_Stroker_CubicTo(stroker, control1, control2, to) IFreetype->FT_Stroker_CubicTo((stroker), (control1), (control2), (to))
#define FT_Stroker_GetBorderCounts(stroker, border, anum_points, anum_contours) IFreetype->FT_Stroker_GetBorderCounts((stroker), (border), (anum_points), (anum_contours))
#define FT_Stroker_ExportBorder(stroker, border, outline) IFreetype->FT_Stroker_ExportBorder((stroker), (border), (outline))
#define FT_Stroker_GetCounts(stroker, anum_points, anum_contours) IFreetype->FT_Stroker_GetCounts((stroker), (anum_points), (anum_contours))
#define FT_Stroker_Export(stroker, outline) IFreetype->FT_Stroker_Export((stroker), (outline))
#define FT_Stroker_Done(stroker) IFreetype->FT_Stroker_Done((stroker))
#define FT_Glyph_Stroke(pglyph, stroker, destroy) IFreetype->FT_Glyph_Stroke((pglyph), (stroker), (destroy))
#define FT_Glyph_StrokeBorder(pglyph, stroker, inside, destroy) IFreetype->FT_Glyph_StrokeBorder((pglyph), (stroker), (inside), (destroy))
#define FT_GlyphSlot_Embolden(slot) IFreetype->FT_GlyphSlot_Embolden((slot))
#define FT_GlyphSlot_AdjustWeight(slot, xdelta, ydelta) IFreetype->FT_GlyphSlot_AdjustWeight((slot), (xdelta), (ydelta))
#define FT_GlyphSlot_Oblique(slot) IFreetype->FT_GlyphSlot_Oblique((slot))
#define FT_GlyphSlot_Slant(slot, xslant, yslant) IFreetype->FT_GlyphSlot_Slant((slot), (xslant), (yslant))
#define FT_Sin(angle) IFreetype->FT_Sin((angle))
#define FT_Cos(angle) IFreetype->FT_Cos((angle))
#define FT_Tan(angle) IFreetype->FT_Tan((angle))
#define FT_Atan2(x, y) IFreetype->FT_Atan2((x), (y))
#define FT_Angle_Diff(angle1, angle2) IFreetype->FT_Angle_Diff((angle1), (angle2))
#define FT_Vector_Unit(vec, angle) IFreetype->FT_Vector_Unit((vec), (angle))
#define FT_Vector_Rotate(vec, angle) IFreetype->FT_Vector_Rotate((vec), (angle))
#define FT_Vector_Length(vec) IFreetype->FT_Vector_Length((vec))
#define FT_Vector_Polarize(vec, length, angle) IFreetype->FT_Vector_Polarize((vec), (length), (angle))
#define FT_Vector_From_Polar(vec, length, angle) IFreetype->FT_Vector_From_Polar((vec), (length), (angle))
#define FT_Get_WinFNT_Header(face, aheader) IFreetype->FT_Get_WinFNT_Header((face), (aheader))
#define FT_Has_PS_Glyph_Names(face) IFreetype->FT_Has_PS_Glyph_Names((face))
#define FT_Get_PS_Font_Info(face, afont_info) IFreetype->FT_Get_PS_Font_Info((face), (afont_info))
#define FT_Get_PS_Font_Private(face, afont_private) IFreetype->FT_Get_PS_Font_Private((face), (afont_private))
#define FT_Get_PS_Font_Value(face, key, idx, value, value_len) IFreetype->FT_Get_PS_Font_Value((face), (key), (idx), (value), (value_len))
#define FT_Get_Sfnt_Table(face, tag) IFreetype->FT_Get_Sfnt_Table((face), (tag))
#define FT_Load_Sfnt_Table(face, tag, offset, buffer, length) IFreetype->FT_Load_Sfnt_Table((face), (tag), (offset), (buffer), (length))
#define FT_Sfnt_Table_Info(face, table_index, tag, length) IFreetype->FT_Sfnt_Table_Info((face), (table_index), (tag), (length))
#define FT_Get_CMap_Language_ID(charmap) IFreetype->FT_Get_CMap_Language_ID((charmap))
#define FT_Get_CMap_Format(charmap) IFreetype->FT_Get_CMap_Format((charmap))

#endif /* INLINE4_FREETYPE_H */
